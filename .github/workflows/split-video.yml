on:
  workflow_dispatch:
name: Live recording split

env:
  BUCKET_IN: fossasia-2022-live-recordings
  BUCKET_OUT: fossasia-2022-sessions

jobs:
  initsrc:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup build matrix
      id: set-matrix
      run: |
        python build_matrix_split.py 
        JSON=$(cat ./matrix.json)
        JSON="${JSON//'%'/%25}"
        JSON="${JSON//$'\n'/%0A}"
        JSON="${JSON//$'\r'/%0D}"
        echo "::set-output name=matrix::${JSON}"
  render:
    needs: initsrc
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.initsrc.outputs.matrix)}}
      fail-fast: false
    steps:
    - uses: actions/checkout@main
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        aws-region: ap-northeast-2
    - name: Check if output already exists
      run: |
        FILECHK=$(aws s3 ls s3://${{env.BUCKET_OUT}}/${{matrix.output}})
        if [ -z $FILECHK ]; then
            echo "Output file already exists, Remove existing file first and try again."
            exit 1
        fi
    - name: Install ffmpeg
      run: |
        sudo apt update
        sudo apt install -yq ffmpeg
    - name: Download video file
      run: |
        aws s3 cp s3://${{env.BUCKET_IN}}/${{ matrix.source }} .
    - name: Split video
      run: |
        ffmpeg -i ${{matrix.source}} -ss ${{ matrix.time_from }} -to ${{ matrix.time_to }} -c copy ${{matrix.output}}
    - name: Upload rendered video file
      run: | 
        aws s3 cp ${{matrix.output}} s3://${{env.BUCKET_OUT}}/
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: ${{matrix.output}}
    #     path: ${{matrix.output}}
