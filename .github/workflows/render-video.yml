on:
  workflow_dispatch:
name: Render video

env:
  BUCKET_IN: ubucon-asia-2021-video-in
  BUCKET_OUT: ubucon-asia-2021-video-out

jobs:
  initsrc:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup build matrix
      id: set-matrix
      run: |
        python build_matrix.py 
        JSON=$(cat ./matrix.json)
        JSON="${JSON//'%'/%25}"
        JSON="${JSON//$'\n'/%0A}"
        JSON="${JSON//$'\r'/%0D}"
        echo "::set-output name=matrix::${JSON}"
  render:
    needs: initsrc
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.initsrc.outputs.matrix)}}
      fail-fast: false
    steps:
    - uses: actions/checkout@main
    - uses: actions/setup-node@main
      with:
        node-version: '16'
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        export_default_credentials: true
        components: gsutil
    - name: Check if output already exists
      run: |
        FILECHK=$(gsutil -q stat gs://${{env.BUCKET_OUT}}/${{matrix.output}}; echo $?)
        if [ $FILECHK -eq 0 ]; then
            echo "Output file already exists, Remove existing file first and try again."
            exit 1
        fi
    - name: Install ffmpeg
      run: |
        sudo apt update
        sudo apt install -yq ffmpeg
    - name: Install Node.js packages
      run: npm install
    - name: Download video file
      run: |
        gsutil cp gs://${{env.BUCKET_IN}}/${{ matrix.videoPath }} src/Videos/
    - name: Render Cover Video
      run: |
        npx remotion render src/index.tsx VideoSeqs cover_${{matrix.output}} --props=params/${{matrix.path}} 
    - name: Concat Cover video and original video
      run: |
        ffmpeg -i cover_${{matrix.output}} -i src/Videos/${{ matrix.videoPath }} \
          -filter_complex "[0:v:0][0:a:0][1:v:0][1:a:0]concat=n=2:v=1:a=1[outv][outa]" -map "[outv]" -map "[outa]" ${{matrix.output}}
    - name: Upload rendered video file
      run: | 
        gsutil cp ${{matrix.output}} gs://${{env.BUCKET_OUT}}/
    - name: Extract FLAC from rendered video
      run: ffmpeg -y -i ${{matrix.output}} -ac 1 ${{matrix.output}}.flac
    - name: Upload extracted FLAC file
      run: | 
        gsutil cp ${{matrix.output}}.flac gs://${{env.BUCKET_OUT}}/
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: ${{matrix.output}}
    #     path: ${{matrix.output}}
