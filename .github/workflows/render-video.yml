on:
  workflow_dispatch:
name: Render video

env:
  BUCKET_IN: video_bucket_in
  BUCKET_OUT: video_bucket_out

jobs:
  initsrc:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup build matrix
      id: set-matrix
      run: |
        python build_matrix.py 
        JSON=$(cat ./matrix.json)
        JSON="${JSON//'%'/%25}"
        JSON="${JSON//$'\n'/%0A}"
        JSON="${JSON//$'\r'/%0D}"
        echo "::set-output name=matrix::${JSON}"
  render:
    needs: initsrc
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.initsrc.outputs.matrix)}}
    steps:
    - uses: actions/checkout@main
    - uses: actions/setup-node@main
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        export_default_credentials: true
        components: gsutil
    - name: Install ffmpeg
      run: |
        sudo apt update
        sudo apt install -yq ffmpeg
    - name: Install Node.js packages
      run: npm install
    - name: Download video file
      run: |
        gsutil cp gs://${{env.BUCKET_IN}}/${{ matrix.videoPath }} src/Videos/
    - name: Render video
      run: npx remotion render src/index.tsx VideoSeqs ${{matrix.output}} --props=params/${{matrix.path}}
    - name: Extract FLAC from rendered video
      run: ffmpeg -y -i ${{matrix.output}} -ac 1 ${{matrix.output}}.flac
    - name: Upload output files
      run: | 
        gsutil cp ${{matrix.output}} gs://${{env.BUCKET_OUT}}/
        gsutil cp ${{matrix.output}}.flac gs://${{env.BUCKET_OUT}}/
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: ${{matrix.output}}
    #     path: ${{matrix.output}}